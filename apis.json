{
    "openapi": "3.0.1",
    "info": {
        "version": "0.0.2",
        "title": "Rating APIs",
        "description": "API interface for CORD SDK",
        "termsOfService": "http://studio.dhiway.com/page/terms-and-conditions",
        "contact": {
            "name": "Dhiway Networks",
            "email": "info@dhiway.com",
            "url": "https://dhiway.com"
        },
        "license": {
            "name": "Apache v2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0"
        }
    },
    "servers": [
        {
            "url": "https://agent.demo.dhiway.com",
            "description": "Demo server"
        },
        {
            "url": "http://localhost:5001/",
            "description": "Local server"
        }
    ],

    "paths": {
        "/login": {
            "post": {
                "tags": ["Rating"],
                "description": "User Login",
                "operationId": "userLogin",
                "requestBody": {
                    "description": "Login details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Login"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Login user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/components/schemas/200_Res_Login"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/write-ratings": {
            "post": {
                "tags": ["Rating"],
                "description": "Write the ratings to the chain",
                "operationId": "writeRatings",
                "requestBody": {
                    "description": "Write the ratings to the chain",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Write_ratings"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "New Score added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "$ref": "#/components/schemas/200_Res"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/amend-ratings": {
            "post": {
                "tags": ["Rating"],
                "description": "Revoke ratings to the chain",
                "operationId": "revokeRatings",
                "requestBody": {
                    "description": "revoke the ratings",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RevokeRating"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Revoked Score",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/200_Res_Revoke"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/write-revised-ratings": {
            "put": {
                "tags": ["Rating"],
                "description": "Update the rating entry",
                "operationId": "updateRatings",
                "requestBody": {
                    "description": "Update the ratings",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Update_ratings"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "New Score added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/200_Res"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/read-aggregate-score/{entityUid}/{ratingType}": {
            "get": {
                "tags": ["Rating"],
                "description": "Read aggregate score",
                "operationId": "scoreShow",
                "parameters": [
                    {
                        "in": "path",
                        "name": "entityUid",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "Entity Identifier"
                    },
                    {
                        "in": "path",
                        "name": "ratingType",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "Rating type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the aggregate score",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/200_Res_Aggregate"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/check-chain-space-usage/{chainSpaceUri}": {
            "get": {
                "tags": ["Rating"],
                "description": "Check the chainspace usage",
                "operationId": "chainUsage",
                "parameters": [
                    {
                        "in": "path",
                        "name": "chainSpaceUri",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "chainSpace Identifier"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Chain space usage",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/200_Res_Usage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "token"
            }
        },
        "schemas": {
            "Error": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string",
                        "description": "Error message",
                        "example": "Error"
                    }
                }
            },
            "UserId": {
                "type": "string",
                "description": "User Id",
                "example": "u1f1b9b3d-c07d-4c8e-901f-6445aa6aef8e"
            },
            "OrgId": {
                "type": "string",
                "description": "Organization ID",
                "example": "o5725409b-7912-40c9-b7cd-8b2e607cf3f3"
            },
            "OrgName": {
                "type": "string",
                "description": "Organization name",
                "example": "University of XYZ"
            },
            "SchemaId": {
                "type": "string",
                "description": "Schema Id",
                "example": "s1f1b9b3d-c07d-4c8e-901f-6445aa6aef8e"
            },
            "SpaceName": {
                "type": "string",
                "description": "Space name",
                "example": "Event XYZ Participation"
            },
            "SpaceActive": {
                "type": "boolean",
                "description": "Space active status",
                "example": true
            },
            "SpaceId": {
                "type": "string",
                "description": "Space ID",
                "example": "5725409b-7912-40c9-b7cd-8b2e607cf3f3"
            },
            "SpaceDescription": {
                "type": "string",
                "description": "Space Description",
                "example": "This space contains records of participation certificate"
            },
            "SpaceTags": {
                "type": "array",
                "description": "Space Tags",
                "example": "['Course 1', 'Quick Learner']"
            },
            "SchemaRequest": {
                "type": "object",
                "properties": {
                    "schema": {
                        "type": "object",
                        "properties": {
                            "description": {
                                "$ref": "#/components/schemas/SpaceDescription"
                            },
                            "title": {
                                "$ref": "#/components/schemas/SpaceName"
                            },
                            "properties": {
                                "type": "object"
                            },
                            "context": {
                                "type": "string",
                                "example": "http://json-schema.org/draft-07/schema#"
                            }
                        }
                    }
                }
            },
            "Schema": {
                "type": "object",
                "properties": {
                    "identity": {
                        "$ref": "#/components/schemas/SpaceId"
                    },
                    "title": {
                        "$ref": "#/components/schemas/SpaceName"
                    },
                    "description": {
                        "$ref": "#/components/schemas/SpaceDescription"
                    },
                    "properties": {
                        "type": "object"
                    }
                }
            },

            "200_Res_Revoke": {
                "type": "object",
                "properties": {
                    "uri": {
                        "type": "string",
                        "example": "rating:cord:r36Q2YiBTn1eWRBSpR3L6gxfaNkPsD8REYYojS7JnaXBC8vXe"
                    },
                    "ack": {
                        "type": "string",
                        "example": "Rating Revoke (Debit) successful"
                    }
                }
            },

            "200_Res_Usage": {
                "type": "object",
                "properties": {
                    "ack": {
                        "$ref": "#/components/schemas/Ack_Get_Usage"
                    }
                }
            },

            "Ack_Get_Usage": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "Success"
                    },
                    "uri": {
                        "type": "string",
                        "example": "space:cord:c347wX2up174dtXXrv1weWqQwHNtqvfc2Lgh1kYZVYdgemvvr"
                    },
                    "creatorUri": {
                        "type": "string",
                        "example": "did:cord:3v3UZ7yxssQSwgwyhMKcDjqBhJgKnDH9yeiXqbiNJ6yFd4cT"
                    },
                    "txnCapacity": {
                        "type": "number",
                        "example": 1000
                    },
                    "txnUsage": {
                        "type": "number",
                        "example": 4
                    },
                    "approved": {
                        "type": "boolean",
                        "example": true
                    },
                    "archive": {
                        "type": "boolean",
                        "example": false
                    }
                }
            },

            "200_Res_Aggregate": {
                "type": "object",
                "properties": {
                    "ack": {
                        "$ref": "#/components/schemas/Ack_Get_Aggregate"
                    }
                }
            },

            "Ack_Get_Aggregate": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "Success"
                    },
                    "entityUid": {
                        "type": "string",
                        "example": "286cf1b1-3e16-448f-b675-3b232e82174d"
                    },
                    "ratingType": {
                        "type": "string",
                        "example": "Overall"
                    },
                    "countOfTxn": {
                        "type": "number",
                        "example": 80
                    },
                    "totalRating": {
                        "type": "number",
                        "example": 280
                    }
                }
            },

            "200_Res_Login": {
                "type": "object",
                "properties": {
                    "ack": {
                        "$ref": "#/components/schemas/Ack"
                    }
                }
            },

            "200_Res": {
                "type": "object",
                "properties": {
                    "ack": {
                        "$ref": "#/components/schemas/Ack"
                    }
                }
            },

            "Ack": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean",
                        "example": true
                    },
                    "did": {
                        "type": "string",
                        "example": "did:cord:3vYxCfRTWVJM8WYP39KFs2FMtpfBTmSjMexRnqeLbf5dmVQF"
                    }
                }
            },

            "RevokeRating": {
                "type": "object",
                "properties": {
                    "context": {
                        "$ref": "#/components/schemas/Context"
                    },
                    "message": {
                        "$ref": "#/components/schemas/Message-Revoke"
                    }
                }
            },

            "Message-Revoke": {
                "type": "object",
                "properties": {
                    "messageId": {
                        "type": "string",
                        "example": "msg-2780214b-a614-467f-8ac9-8c897bb34a57"
                    },
                    "entryDigest": {
                        "type": "string",
                        "example": "0xaf2e4a04dc5d0a9f680207902283fc67cf1fe16f8f2ac31d10bfcac1d646ac36"
                    },
                    "referenceId": {
                        "type": "string",
                        "example": "rating:cord:r33rMi45NbJoEfz5yATYzX3uMUMjf97zo24e5fAvNF4ixtixd"
                    },
                    "providerSignature": {
                        "$ref": "#/components/schemas/ProviderSignature"
                    },
                    "entityUid": {
                        "type": "string",
                        "example": "286cf1b1-3e16-448f-b675-3b232e82174d"
                    },
                    "providerDid": {
                        "type": "string",
                        "example": "did:cord:3vYxCfRTWVJM8WYP39KFs2FMtpfBTmSjMexRnqeLbf5dmVQF"
                    }
                }
            },

            "Write_ratings": {
                "type": "object",
                "properties": {
                    "context": {
                        "$ref": "#/components/schemas/Context"
                    },
                    "message": {
                        "$ref": "#/components/schemas/Message"
                    }
                }
            },

            "Login": {
                "type": "object",
                "properties": {
                    "context": {
                        "$ref": "#/components/schemas/Context"
                    },
                    "message": {
                        "$ref": "#/components/schemas/Login_Message"
                    }
                }
            },

            "Update_ratings": {
                "type": "object",
                "properties": {
                    "context": {
                        "$ref": "#/components/schemas/Context"
                    },
                    "message": {
                        "$ref": "#/components/schemas/UpdateMessage"
                    }
                }
            },

            "Context": {
                "type": "object",
                "properties": {
                    "domain": {
                        "type": "string",
                        "example": "local_retail"
                    },
                    "country": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string",
                        "example": "on_rating"
                    },
                    "core_version": {
                        "type": "string"
                    },
                    "bap_id": {
                        "type": "string"
                    },
                    "bap_uri": {
                        "type": "string"
                    },
                    "bpp_id": {
                        "type": "string"
                    },
                    "bpp_uri": {
                        "type": "string"
                    },
                    "transaction_id": {
                        "type": "string"
                    },
                    "message_id": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "string",
                        "example": "2021-06-29T10:52:01.620Z"
                    },
                    "key": {
                        "type": "string"
                    },
                    "ttl": {
                        "type": "string"
                    }
                }
            },

            "Message": {
                "type": "object",
                "properties": {
                    "entry": {
                        "$ref": "#/components/schemas/Entry"
                    },
                    "messageId": {
                        "type": "string",
                        "example": "msg-2780214b-a614-467f-8ac9-8c897bb34a57"
                    },
                    "entryDigest": {
                        "type": "string",
                        "example": "0xaf2e4a04dc5d0a9f680207902283fc67cf1fe16f8f2ac31d10bfcac1d646ac36"
                    },
                    "providerSignature": {
                        "$ref": "#/components/schemas/ProviderSignature"
                    }
                }
            },

            "Login_Message": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Jack"
                    },
                    "email": {
                        "type": "string",
                        "example": "jack@gmail.com"
                    }
                }
            },

            "UpdateMessage": {
                "type": "object",
                "properties": {
                    "entry": {
                        "$ref": "#/components/schemas/UpdateEntry"
                    },
                    "messageId": {
                        "type": "string",
                        "example": "msg-2780214b-a614-467f-8ac9-8c897bb34a57"
                    },
                    "entryDigest": {
                        "type": "string",
                        "example": "0xaf2e4a04dc5d0a9f680207902283fc67cf1fe16f8f2ac31d10bfcac1d646ac36"
                    },
                    "providerSignature": {
                        "$ref": "#/components/schemas/ProviderSignature"
                    }
                }
            },

            "Entry": {
                "type": "object",
                "properties": {
                    "entityUid": {
                        "type": "string",
                        "example": "286cf1b1-3e16-448f-b675-3b232e82174d"
                    },
                    "entityId": {
                        "type": "string",
                        "example": "Gupta Kirana Store"
                    },
                    "providerUid": {
                        "type": "string",
                        "example": "96bb9f75-0ff8-4ef8-8e2b-0d709e2c0fed"
                    },
                    "providerId": {
                        "type": "string",
                        "example": "GoFrugal"
                    },
                    "entityType": {
                        "type": "string",
                        "example": "Retail"
                    },
                    "ratingType": {
                        "type": "string",
                        "example": "Overall"
                    },
                    "countOfTxn": {
                        "type": "number",
                        "example": 100
                    },
                    "providerDid": {
                        "type": "string",
                        "example": "3vYxCfRTWVJM8WYP39KFs2FMtpfBTmSjMexRnqeLbf5dmVQF"
                    },
                    "totalEncodedRating": {
                        "type": "number",
                        "example": 3200
                    }
                }
            },

            "UpdateEntry": {
                "type": "object",
                "properties": {
                    "entityUid": {
                        "type": "string",
                        "example": "286cf1b1-3e16-448f-b675-3b232e82174d"
                    },
                    "entityId": {
                        "type": "string",
                        "example": "Gupta Kirana Store"
                    },
                    "providerUid": {
                        "type": "string",
                        "example": "96bb9f75-0ff8-4ef8-8e2b-0d709e2c0fed"
                    },
                    "providerId": {
                        "type": "string",
                        "example": "GoFrugal"
                    },
                    "entityType": {
                        "type": "string",
                        "example": "Retail"
                    },
                    "ratingType": {
                        "type": "string",
                        "example": "Overall"
                    },
                    "countOfTxn": {
                        "type": "number",
                        "example": 80
                    },
                    "referenceId": {
                        "type": "string",
                        "example": "r36Q2YiBTn1eWRBSpR3L6gxfaNkPsD8REYYojS7JnaXBC8vXe"
                    },
                    "providerDid": {
                        "type": "string",
                        "example": "3vYxCfRTWVJM8WYP39KFs2FMtpfBTmSjMexRnqeLbf5dmVQF"
                    },
                    "totalEncodedRating": {
                        "type": "number",
                        "example": 2800
                    }
                }
            },

            "ProviderSignature": {
                "type": "object",
                "properties": {
                    "signature": {
                        "type": "string",
                        "example": "0x29665e65e3221894aa1f67735bbfb74065c31209f8f58c5f4c16f6e5bfeaa5462f0115fe3efc768e44d1e3626ef5e26ce938320e5e2340dcf4c8af0cde80c603"
                    },
                    "keyUri": {
                        "type": "string",
                        "example": "did:cord:3vYxCfRTWVJM8WYP39KFs2FMtpfBTmSjMexRnqeLbf5dmVQF#0xace0acca34668bd9a824457c1a494cf3f4cb4f68c87b0a65cf80f67da2d1d50a"
                    }
                }
            },

            "SchemaListing": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "number",
                        "description": "Count of spaces in this request",
                        "example": "5"
                    },
                    "page": {
                        "type": "number",
                        "description": "page of this request (used in pagination) [0-n]",
                        "example": "0"
                    },
                    "pageSize": {
                        "type": "number",
                        "description": "max size of spaces array (used in pagination) [1-n]",
                        "example": "20"
                    },
                    "schemas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Schema"
                        }
                    }
                }
            },
            "SpaceRequest": {
                "type": "object",
                "properties": {
                    "space": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "$ref": "#/components/schemas/SpaceName"
                            },
                            "description": {
                                "$ref": "#/components/schemas/SpaceDescription"
                            }
                        }
                    }
                }
            },
            "SpaceListing": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "number",
                        "description": "Count of spaces in this request",
                        "example": "5"
                    },
                    "page": {
                        "type": "number",
                        "description": "page of this request (used in pagination) [0-n]",
                        "example": "0"
                    },
                    "pageSize": {
                        "type": "number",
                        "description": "max size of spaces array (used in pagination) [1-n]",
                        "example": "20"
                    },
                    "spaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Space"
                        }
                    }
                }
            },
            "Space": {
                "type": "object",
                "properties": {
                    "identity": {
                        "$ref": "#/components/schemas/SpaceId"
                    },
                    "title": {
                        "$ref": "#/components/schemas/SpaceName"
                    },
                    "description": {
                        "$ref": "#/components/schemas/SpaceDescription"
                    },
                    "active": {
                        "$ref": "#/components/schemas/SpaceActive"
                    },
                    "schema": {
                        "$ref": "#/components/schemas/SchemaId"
                    }
                }
            },
            "RecordId": {
                "type": "string",
                "description": "Record Id",
                "example": "138a8cca-0404-11ed-ac97-cb7be2aeb26e"
            },
            "RecordPublicId": {
                "type": "string",
                "description": "Record Id",
                "example": "138a8cca-0404-11ed-ac97-cb7be2aeb26e"
            },
            "RecordTitle": {
                "type": "string",
                "description": "Record Title",
                "example": "Student Name"
            },
            "RecordRevoked": {
                "type": "boolean",
                "description": "Record Active Status",
                "example": false
            },
            "RecordHash": {
                "type": "string",
                "description": "Hash of the Content",
                "example": "a2e996e30ff823a507943864a9a7db3c168617acb845addb947eaf277f83ec4d"
            },
            "RecordSignature": {
                "type": "string",
                "description": "Signature of the Content",
                "example": "0x006f43832156cbc303463e94eef7631f75638319fe91add8bc170ca33836b29998251077b92ec57d199e60c94b3757e4189ab9bc331ecb8ad22135bfe9b1653e0a"
            },
            "RecordTransactionHash": {
                "type": "string",
                "description": "Record Transaction Hash",
                "example": "0xc33442028e179c347515890d9a53f7b827811b254cdaa441d468fe0bd256b334"
            },
            "RecordContent": {
                "type": "object",
                "description": "Record Content",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "URL to Redirect",
                        "example": "value"
                    }
                }
            },
            "RecordRequest": {
                "type": "object",
                "properties": {
                    "title": {
                        "$ref": "#/components/schemas/RecordTitle"
                    },
                    "publish": {
                        "type": "boolean",
                        "description": "Publish on Chain or not",
                        "example": false
                    },
                    "send_email": {
                        "type": "boolean",
                        "description": "Send Email about the credential issue",
                        "example": false
                    },
                    "issue_message": {
                        "type": "string",
                        "description": "Message from issuer to recipient",
                        "example": "Congratulations on your degree completion"
                    },
                    "content": {
                        "$ref": "#/components/schemas/RecordContent"
                    }
                }
            },
            "RecordListing": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "number",
                        "description": "Count of records in this request",
                        "example": "5"
                    },
                    "page": {
                        "type": "number",
                        "description": "page of this request (used in pagination) [0-n]",
                        "example": "0"
                    },
                    "pageSize": {
                        "type": "number",
                        "description": "max size of records array (used in pagination) [1-n]",
                        "example": "20"
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Record"
                        }
                    }
                }
            },
            "Record": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/RecordId"
                    },
                    "publicId": {
                        "$ref": "#/components/schemas/RecordPublicId"
                    },
                    "title": {
                        "$ref": "#/components/schemas/RecordTitle"
                    },
                    "schemaId": {
                        "$ref": "#/components/schemas/SchemaId"
                    },
                    "revoked": {
                        "$ref": "#/components/schemas/RecordRevoked"
                    },
                    "active": {
                        "$ref": "#/components/schemas/RecordRevoked"
                    },
                    "hash": {
                        "$ref": "#/components/schemas/RecordHash"
                    },
                    "signature": {
                        "$ref": "#/components/schemas/RecordSignature"
                    },
                    "transactionHash": {
                        "$ref": "#/components/schemas/RecordTransactionHash"
                    },
                    "url": {
                        "type": "string",
                        "description": "Verification URL for the record",
                        "example": "https://dway.io/m/e248dfa8-0409-11ed-ba3b-138cbf9c1d66?api=1"
                    }
                }
            },
            "RecordVerify": {
                "type": "object",
                "description": "Record Verification Content",
                "properties": {
                    "vc": {
                        "type": "object",
                        "description": "VC output from record Create",
                        "example": "{}"
                    }
                }
            }
        }
    }
}
